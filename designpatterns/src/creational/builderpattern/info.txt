1>It is used to construct a complex object step by step and the final step will return the object.
The process of constructing an object should be generic so that it can be used to create different
representations of the same object.

2>
Product – The product class defines the type of the complex object that is to be generated by the builder
pattern.
Builder – This abstract base class or interface defines all of the steps that must be taken in order to
correctly create a product.The GetProduct method is used to return the final product.
ConcreteBuilder – There may be any number of concrete builder classes inheriting from Builder. These classes contain the functionality
to create a particular complex product.
Director – The director class controls the algorithm that generates the final product object.
A director object is instantiated and its Construct method is called. The method includes a parameter to
capture the specific concrete builder object that is to be used to generate the product.
The director then calls methods of the concrete builder in the correct order to generate the product object.
On completion of the process, the GetProduct method of the builder object can be used to return the product.

3>Advantages of Builder Design Pattern

  The parameters to the constructor are reduced and are provided in highly readable method calls.
  Object is always instantiated in a complete state
  Immutable objects can be build without much complex logic in object building process.

4>Disadvantages of Builder Design Pattern

  The number of lines of code increase at least to double in builder pattern.
  Requires creating a separate ConcreteBuilder for each different type of Product.

5> Usage in java API :- java.lang.StringBuilder#append() (unsynchronized)
                        java.lang.StringBuffer#append() (synchronized)

6> Lets see an Example of Builder Design Pattern :

   Consider a construction of a home. Home is the final end product (object) that is to be returned as the
   output of the construction process. It will have many steps like basement construction, wall construction
   and so on roof construction.
   Finally the whole home object is returned.

7> Other Examples:-

Example 1 - Vehicle Manufacturer.

Let us take the case of a vehicle manufacturer that, from a set of parts, can build a car, a bicycle,
a motorcycle or a scooter.
In this case the Builder will become the VehicleBuilder. It specifies the interface for building any of the
vehicles in the list above, using the same set of parts and a different set of rules for every type of type
of vehicle. The ConcreteBuilders will be the builders attached to each of the objects that are being under
construction. The Product is of course the vehicle that is being constructed and the Director is the
manufacturer and its shop.



Example 2 - Students Exams.

If we have an application that can be used by the students of a University to provide them with the list of
their grades for their exams, this application needs to run in different ways depending on the user that is
using it, user that has to log in. This means that, for example, the admin needs to have some buttons
enabled, buttons that needs to be disabled for the student,the common user. The Builder provides the
interface for building form depending on the login information. The ConcreteBuilders
are the specific forms for each type of user. The Product is the final form that the application will use
in the given case and the Director is the application that, based on the login information,
needs a specific form.

